==========================
shelve
==========================
import shelve

with shelve.open('shelftest') as fruit:
   fruit['apple']="an apple in a day"
   fruit['kela']="lamba"
   fruit['angoor']="gol hota "
   fruit['tarbooj']="like hyperbola"
   fruit['aam']="pila and lal"
   fruit['santra']="gol and pila"

print(class(fruit))


================================
pickling
================================
import pickle
imelda=('more mayhem',
       'imelda may',
       '2011',
       ((1,'pulling a red'),
        (2,'psycho'),
        (3,'mayhem'),
        (4,'navrat')
        ))
with open("imelda.pickle",'wb') as pickle_file_write:
   pickle.dump(imelda,pickle_file_write)
   pickle.dump(imelda,pickle_file_write,protocol=pickle.HIGHEST_PROTOCOL)
if you write in file with 'w' mode then it will take in str form but
   pickle.dumps(obj, protocol=None, *, fix_imports=True)
Return the pickled representation of the object as a bytes object,
instead of writing it to a file.
so you have to open the file in 'wb' mode.
------------------
changing a state of object into byte stream called serialization.
------------------
with open("imelda.pickle",'rb') as pickle_file_read:
   item=pickle.load(pickle_file_read)
   print(item)



==========================
writing a binary file
==========================
with open("/home/rahulrajput/Desktop/bin",'bw') as b_write:
   for i in range(17):
       b_write.write(bytes([i]))
        bytes[i] means passing a list
        bytes(i) means passing a string


with open("/home/rahulrajput/Desktop/bin",'br') as b_read:
   for item in b_read:
       print("*")
   print(item)

==========================
writing a file
==========================
imelda="more mayhem","imelda may","2011",(
    (1,"pulling the rug"),(2,"psycho"),(3,"mayhem"),(4,"kentshin town waltz"))
with open("/home/rahulrajput/Desktop/file2.txt",'r') as f_write:
    comment=f_write.readline()
print(comment)
imelda=eval(comment)
print (imelda)
imelda=eval(comment)



-------------------------------------------------------------
with open ("/home/rahulrajput/Desktop/file2.txt",'a') as f_write:
   for item in imelda:
        print(imelda)
        print(imelda,file = f_write)
cities=['kanpur','lucknow','haridwar','rishikesh','rath','hamirpur','UP']

with open("/home/rahulrajput/Desktop/file1.txt",'w') as f_write:
    f_write.writelines(cities)# to write line in asingle line
   for city in cities:
       print(city,file=f_write)

---------------------------------------------------------------------
cities = []

with open("/home/rahulrajput/Desktop/file1.txt",'r') as f_read:
   for city in f_read:
       cities.append(city.strip('\n'))
print(cities)
       print(cities,strip='/n')
=================================================================================
reading a file
=================================================================================
1st way to opening a file
f_open=open("/home/rahulrajput/Desktop/file.txt",'r')

for line in f_open:
   print(line)
   print(line[:-1])
   print(line[:1])
f_open.close()
2nd way to opening a file
with open("/home/rahulrajput/Desktop/file.txt",'r') as f_open:


   for line in f_open:
       if "root" in line:
           print(line,end='=')
   line=f_open.readline() read single line
   line=f_open.readlines() readlines read the entire file and return the list of string
   print(line)
===============================
#Dictionary
fruit ={'orange':'a sweet aur acha hai ',
       'lemon':'pila hota hai',
        'grape':'a small sweet fruit',
        'lime':'a pila hota hai bhai',
        'kalinda':'lal hota hia'
        }
#print(fruit)
for i in range(10):
    for value in fruit:
        print(fruit[value])
    print('-'*40)
print(fruit['lemon'])
#adding a new entry in the dictionary
fruit['akhrot']='bhai bahut tite hota hai'
#print(fruit['akhrot'])
while True:
    value=input("enter the fruit name")
    if value=="quit":
        break
    if value in fruit:
        description=fruit.get(value)
        print(description)
    else:
        print("we do not have " + value)
print(fruit.keys())
############fruit['tarkari']='bhata ki tarkari'
print(fruit.keys())
############f_tuple=tuple(fruit.keys())
############print(f_tuple)
================================================
offset=2
for i in range(1,10,offset):
    print(i)


========================================
tupple
=======================================
a classical example of tupple
imelda="more mayhem","imelda may","2011",(
    (1,"pulling the rug"),(2,"psycho"),(3,"mayhem"),(4,"kentshin town waltz"))
x,y,z,w=imelda
print(type(x))
print(type(y))
print(type(z))
print(type(w))
x1,y1,z1,w1=w
print(type(x1))
print(type(y1))
print(type(z1))
print(type(w1))
print(x1)
x2,y2=x1
print(type(x2))
print(type(y2))






t="a","b","c"
print(t)
print("a","b",'c')
print(("a","b",'c'))
list=['4','3','2']
list1=list.append("4")
print(list)
tup=('5','6','7')#tupple
tup.append('w')
# print(tup)
list=[2,3,4,5]
print(list[0])
list[0]=3
print(list)
#tuppl="my name is"
tuppl1="my name is"
#print(type(tuple))
#tuppl[0]="mm"
tuppl1[0]="mm"
#print(tuppl)
print(tuppl1)


imelda = "more mayhem",'imelda may',2015,(
    (1,'pulling the ring'),(2,'psycho'),(3,'mayjehe'),(4,'kentinj town waltz')
)

#print(imelda)
#unpacking the tupple
name,month,year,artist =imelda
#print(name)
#print(month)
#print(year)
for song in artist:
 #   print(song)
#packing the tupple
    name,track=song
    print('name {},track{}'.format(name,track))


----------------------------------------------------------------------------------------
tupp= 'tim','55','america',([(1,'impetious'),(2,'battle symphony'),(3,'no toge')])
print(tupp)
print(type(tupp))
<class 'tuple'>

print(tupp[0])
55
print(tupp[1])
tim
print(tupp[2])
america
print(tupp[3])
[(1, 'impetious'), (2, 'battle symphony'), (3, 'no toge')]
tupp[3].append((4,'new entry'))
print(tupp)
print(type(tupp[3]))# appended inside the third element in the list and inside the whole tupplke
unpacking the tupple
name,age,country,track=tupp
print(type(track))
<class 'list'>
print (name)
tim
print (age)
55
print (country)
america
print (track)
[(1, 'impetious'), (2, 'battle symphony'), (3, 'no toge')]

here track is the list so we can append item in it(it is mutable.)
track.append((7,'castle of song'))
print(track)
so ultimately this tupple is changing in behaviour.
for further extracting the value inside the track
for song in track:
    print(type(song))
    <class 'tuple'>
   print(song)
(1, 'impetious')
(2, 'battle symphony')
(3, 'no toge')
unpacking the song tupple
   track_no,song_name=song
   print("track_no {} ,song_name {}".format(track_no,song_name))
---------------------------------------------------------------------------------------
========================================
removing duplicate entry from list
Very important program
========================================
******************************************************************************************
name = ["John", "Eric", "Jessica","rhu","hima","gupta","hima","Eric","name","gupta"]
name = [2,5,3,6,4,7,5,2,7,1,0]
new=[]
for i in name:
   if i not in new:
      new.append(i)
   else:
       print("the duplicat entries are == {} ".format(i))

       pass

print(new)
*******************************************************************************************
=============================

list ,,range in python

=============================
ip=input("please enter an ip")
print(ip.count("."))
it will tell you all the "." in an ip

lis=['one','two','three']
for item in lis:
    print("yr hai"+ item)
=================================
even = [2,4,6,8]
odd=[1,3,5,7]
numbers=even+odd
print(numbers.sort())
print(numbers)
print(type(numbers))
=================================
list
============================
even=[2,4,6,8]
odd=[1,3,5,7]
number=[even,odd]
print(number)
for item in number:
    print(item)
    for value in item:
        print(value)

o/p-[[2, 4, 6, 8], [1, 3, 5, 7]]
[2, 4, 6, 8]
2
4
6
8
[1, 3, 5, 7]
1
3
5
7

========================================================
more on list
===================================================
menu=[]
menu.append(['egg','spam','bacon'])
menu.append(['egg','aloo','bacon'])
menu.append(['egg','spam'])
menu.append(['egg','spam','bacon'])
menu.append(['egg','spam','bacon','aloo'])
menu.append(['egg','spam','bacon','ghobi'])
menu.append(['egg','spam','bacon','aloo','ghobi'])
menu.append(['egg','spam','bacon','mircha'])
menu.append(['egg','spam','bacon','aloo'])

#print(menu)

for item  in menu:
    if not "spam"  in item:
        print(item)

=============================================================
Iterators
=============================================================
string="1234567890"

my_iterator=iter(string)
print(my_iterator)
=============================================================
number=[1,2,3,4,5,6,7,8]

# my_iterator=iter(my_)
decimals= range(0,100)
print(decimals)

my_range=decimals[3:40:3]
print(my_range)

for i  in my_range:
    print(i)

print(range(0,5,2)==range(0,6,2))
print(list(range(0,5,2)))
print(list(range(0,6,2)))
print(list(range(0,9)))
============================================
while loop in python
===========================================
exit=['north','south','west','east']
chose_exit=''
while chose_exit not in  exit:
#    print("again inside")
    chose_exit=input("enter the exit")
    if chose_exit=="quit":
        print("gamw over")
        break
else:
    print("you are out bhai")

in this upper line we are using while with else\
and we can also use if with else or while with else







============================================
 ip=input("enter the ip")
count=0
total=0
for seg in ip:
    if seg ==".":
        total=total+1
        count=count+1
    print(total)
print(count+1)

print("this is ip {}".format(ip))

=======================
ip=input("enter the ip")
ip="127.153.12.365"
count=0
for seg in ip:
    count+=1
    if seg==".":
         print(count-1)
         count=0
if seg !=".":
    print(count)
    print(seg)#the notable point is i have
=========================
#================================================
#by tim buchka find the length of sepratble factor
ip=input("enter the ip")
segment=0
segment_length=0
for seg in  ip:
    if seg ==".":
        print("segment {} is segment_length {}".format(segment,segment_length))
        print("second")

        segment=segment+1
        segment_length=0
    else:
        segment_length=segment_length+1

    print("first")
    if seg != ".":

        print("second")




========================
Right program for the finding length of ip of every segment
========================
ip=input('enter the ip')
if ip[-1] !=".":
    ip=ip + "."
    print("hdhs")

segment=0
segment_length=0
for seg in ip:
    if seg==".":

        segment=segment+1
 #       print("second")
        print("segment {} ki segment_length {}".format(segment,segment_length))
        segment_length=0
    else:
        segment_length=segment_length+1
       print("first")
================================================
ip=input("enter the ip")
print(ip[-1])



================================================

ip="i am from kanpur"
for seg in ip:
    print(seg)

print("rahul")
print(seg)



    if seg=="":
        print(count)
print(occure)

    elif seg == "":
        num=num+1
        print(num)



    count+=1
    print(count)


















number ="9,223,372,036,854,775,807"
cleanednumber=""
for i in range(0,len(number)):
    print(i)
    if number[i] in "0123456789":
        cleanednumber = number[i]
newnumber=int(cleanednumber)
print("the number is {}".format(newnumber))



meal=["egg","bacon","tomato","sausages"]

for item in meal:
    if item == "tomato":
        nasty=item
        break

if nasty:
    print("can't i have any ")

for i in range(1,20):
    print("i is now {}".format(i))

number="9,334,445, 333,555,222,999"
for i in range(0,len(number)):
    print(len(number))
    print(number[i])


number="9,334,445, 333,555,222,999"
for i in range(len(number)):
    if number[i] in  "0123456789":
        print(type(number[i]))
        print(number[i],end="")
 a alternative method without using end
number="9,334,445,333,555,222,999"
cleanedNumber=""
for i in range(len(number)):
    if number[i] in  "0123456789":
        cleanedNumber = cleanedNumber + number[i]
#        newnumber=int(cleanedNumber)
#if this newnumber will be inside the if loop and there are like 100 number then there will
#be lot more processing so for that we have to do it once.that why we will use it
#outside of the if loop and there will be one time processing.
newnumber=int(cleanedNumber)
print(cleanedNumber)
for i in range (0,100,5):
   print("i is {}".format(i))

for i in range(1,13):
    for j in range(1,13):
        print("{} times {} is {}".format(i,j,i+j))
    print("====================")


















name=input("please enter your name")
age =int(input("how old are you, {0}".format(name)))
print(age)
 if (age)>=18:
     print("you are old tenough tom talk")
 else:
     print("please come back in {0}".format(18-age)
 print("please guess a number between 1 to 10")
 guess=int(input())
 if guess != 5:
    if guess < 5:
        print("raise the value")
    else:
        print("guess lower value")
    guess=int(input())
    if guess==5:
        print("you have guess right")
    else:
        print("you have loosed this chance too")

else:
    print("you got it ")






